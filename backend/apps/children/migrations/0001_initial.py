# Generated by Django 4.2.7 on 2025-07-02 20:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom de famille')),
                ('nickname', models.CharField(blank=True, max_length=50, verbose_name='Surnom')),
                ('date_of_birth', models.DateField(verbose_name='Date de naissance')),
                ('place_of_birth', models.CharField(blank=True, max_length=200, verbose_name='Lieu de naissance')),
                ('gender', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='Sexe')),
                ('nationality', models.CharField(default='Française', max_length=100, verbose_name='Nationalité')),
                ('arrival_date', models.DateField(verbose_name="Date d'arrivée")),
                ('arrival_reason', models.TextField(blank=True, verbose_name="Raison de l'arrivée")),
                ('arrival_circumstances', models.TextField(blank=True, verbose_name="Circonstances d'arrivée")),
                ('status', models.CharField(choices=[('a_parrainer', 'À parrainer'), ('parraine', 'Parrainé'), ('adopte', 'Adopté'), ('en_attente', 'En attente'), ('sorti', "Sorti de l'établissement")], default='a_parrainer', max_length=20, verbose_name='Statut')),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-'), ('unknown', 'Inconnu')], default='unknown', max_length=10, verbose_name='Groupe sanguin')),
                ('allergies', models.TextField(blank=True, verbose_name='Allergies')),
                ('medical_conditions', models.TextField(blank=True, verbose_name='Conditions médicales')),
                ('medications', models.TextField(blank=True, verbose_name='Médicaments')),
                ('vaccination_status', models.TextField(blank=True, verbose_name='Statut vaccinal')),
                ('last_medical_checkup', models.DateField(blank=True, null=True, verbose_name='Dernière visite médicale')),
                ('education_level', models.CharField(blank=True, max_length=100, verbose_name="Niveau d'éducation")),
                ('school', models.CharField(blank=True, max_length=200, verbose_name='École')),
                ('special_needs', models.TextField(blank=True, verbose_name='Besoins spéciaux')),
                ('languages_spoken', models.CharField(default='Français', max_length=200, verbose_name='Langues parlées')),
                ('family_background', models.TextField(blank=True, verbose_name='Contexte familial')),
                ('emergency_contact_name', models.CharField(blank=True, max_length=200, verbose_name="Contact d'urgence - Nom")),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, verbose_name="Contact d'urgence - Téléphone")),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, verbose_name="Contact d'urgence - Relation")),
                ('photo', models.ImageField(blank=True, null=True, upload_to='children/photos/', verbose_name='Photo')),
                ('birth_certificate', models.FileField(blank=True, null=True, upload_to='children/documents/', verbose_name='Acte de naissance')),
                ('medical_records', models.FileField(blank=True, null=True, upload_to='children/medical/', verbose_name='Dossier médical')),
                ('sponsor_start_date', models.DateField(blank=True, null=True, verbose_name='Date de début du parrainage')),
                ('adoption_date', models.DateField(blank=True, null=True, verbose_name="Date d'adoption")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='Dossier confidentiel')),
                ('confidentiality_reason', models.TextField(blank=True, verbose_name='Raison de la confidentialité')),
            ],
            options={
                'verbose_name': 'Enfant',
                'verbose_name_plural': 'Enfants',
                'ordering': ['last_name', 'first_name'],
                'permissions': [('view_confidential_child', 'Peut voir les dossiers confidentiels'), ('export_child_data', 'Peut exporter les données des enfants')],
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('visit_date', models.DateTimeField(verbose_name='Date de la visite')),
                ('visit_type', models.CharField(choices=[('routine', 'Visite de routine'), ('emergency', 'Urgence'), ('specialist', 'Spécialiste'), ('vaccination', 'Vaccination'), ('dental', 'Dentaire'), ('psychological', 'Psychologique')], max_length=20, verbose_name='Type de visite')),
                ('doctor_name', models.CharField(max_length=200, verbose_name='Nom du médecin')),
                ('clinic_hospital', models.CharField(blank=True, max_length=200, verbose_name='Clinique/Hôpital')),
                ('symptoms', models.TextField(blank=True, verbose_name='Symptômes')),
                ('diagnosis', models.TextField(blank=True, verbose_name='Diagnostic')),
                ('treatment', models.TextField(blank=True, verbose_name='Traitement')),
                ('medications_prescribed', models.TextField(blank=True, verbose_name='Médicaments prescrits')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Suivi requis')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Date de suivi')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Taille (cm)')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Poids (kg)')),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='Température (°C)')),
                ('blood_pressure', models.CharField(blank=True, max_length=20, verbose_name='Tension artérielle')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records_set', to='children.child')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dossier médical',
                'verbose_name_plural': 'Dossiers médicaux',
                'ordering': ['-visit_date'],
            },
        ),
        migrations.CreateModel(
            name='ChildNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('note_type', models.CharField(choices=[('medical', 'Médical'), ('behavioral', 'Comportemental'), ('educational', 'Éducatif'), ('social', 'Social'), ('administrative', 'Administratif'), ('other', 'Autre')], max_length=20, verbose_name='Type de note')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='Confidentiel')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='children.child')),
            ],
            options={
                'verbose_name': 'Note sur enfant',
                'verbose_name_plural': 'Notes sur enfants',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChildDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('birth_certificate', 'Acte de naissance'), ('medical_record', 'Dossier médical'), ('school_report', 'Bulletin scolaire'), ('photo', 'Photo'), ('legal_document', 'Document légal'), ('other', 'Autre')], max_length=20, verbose_name='Type de document')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='children/documents/', verbose_name='Fichier')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Téléchargé le')),
                ('is_confidential', models.BooleanField(default=False, verbose_name='Confidentiel')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='children.child')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document enfant',
                'verbose_name_plural': 'Documents enfants',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
