# Generated by Django 4.2.7 on 2025-07-02 21:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('children', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name="Nom de l'équipe")),
                ('shift_type', models.CharField(choices=[('morning', 'Matin'), ('afternoon', 'Après-midi'), ('evening', 'Soir'), ('night', 'Nuit'), ('full_day', 'Journée complète')], max_length=20, verbose_name="Type d'équipe")),
                ('start_time', models.TimeField(verbose_name='Heure de début')),
                ('end_time', models.TimeField(verbose_name='Heure de fin')),
                ('date', models.DateField(verbose_name='Date')),
                ('minimum_staff', models.PositiveIntegerField(default=1, verbose_name='Personnel minimum')),
                ('maximum_staff', models.PositiveIntegerField(default=10, verbose_name='Personnel maximum')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_shifts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Équipe',
                'verbose_name_plural': 'Équipes',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'échéance")),
                ('completed_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de completion')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='medium', max_length=10, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('in_progress', 'En cours'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('on_hold', 'En pause')], default='pending', max_length=20, verbose_name='Statut')),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Pourcentage de progression')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Heures estimées')),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Heures réelles')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('completion_notes', models.TextField(blank=True, verbose_name='Notes de completion')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Assigné à')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('related_child', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_tasks', to='children.child', verbose_name='Enfant concerné')),
                ('related_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_events', to='planning.task', verbose_name='Événement lié')),
            ],
            options={
                'verbose_name': 'Tâche',
                'verbose_name_plural': 'Tâches',
                'ordering': ['-priority', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='ShiftAssignment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('assigned', 'Assigné'), ('confirmed', 'Confirmé'), ('completed', 'Terminé'), ('absent', 'Absent'), ('cancelled', 'Annulé')], default='assigned', max_length=20, verbose_name='Statut')),
                ('actual_start_time', models.TimeField(blank=True, null=True, verbose_name='Heure de début réelle')),
                ('actual_end_time', models.TimeField(blank=True, null=True, verbose_name='Heure de fin réelle')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='planning.shift')),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Attribution d'équipe",
                'verbose_name_plural': "Attributions d'équipes",
                'unique_together': {('shift', 'staff_member')},
            },
        ),
        migrations.AddField(
            model_name='shift',
            name='staff_members',
            field=models.ManyToManyField(related_name='shifts', through='planning.ShiftAssignment', to=settings.AUTH_USER_MODEL, verbose_name='Personnel'),
        ),
        migrations.AddField(
            model_name='shift',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervised_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Superviseur'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('work_start_time', models.TimeField(default='08:00', verbose_name='Heure de début de travail')),
                ('work_end_time', models.TimeField(default='17:00', verbose_name='Heure de fin de travail')),
                ('lunch_break_duration', models.PositiveIntegerField(default=60, verbose_name='Durée pause déjeuner (minutes)')),
                ('monday', models.BooleanField(default=True, verbose_name='Lundi')),
                ('tuesday', models.BooleanField(default=True, verbose_name='Mardi')),
                ('wednesday', models.BooleanField(default=True, verbose_name='Mercredi')),
                ('thursday', models.BooleanField(default=True, verbose_name='Jeudi')),
                ('friday', models.BooleanField(default=True, verbose_name='Vendredi')),
                ('saturday', models.BooleanField(default=False, verbose_name='Samedi')),
                ('sunday', models.BooleanField(default=False, verbose_name='Dimanche')),
                ('email_reminders', models.BooleanField(default=True, verbose_name='Rappels par email')),
                ('sms_reminders', models.BooleanField(default=False, verbose_name='Rappels par SMS')),
                ('reminder_advance_minutes', models.PositiveIntegerField(default=30, verbose_name='Avance des rappels (minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Planning',
                'verbose_name_plural': 'Plannings',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('event_type', models.CharField(choices=[('medical_visit', 'Visite médicale'), ('activity', 'Activité'), ('education', 'Éducation'), ('recreation', 'Récréation'), ('meal', 'Repas'), ('therapy', 'Thérapie'), ('meeting', 'Réunion'), ('appointment', 'Rendez-vous'), ('maintenance', 'Maintenance'), ('other', 'Autre')], max_length=20, verbose_name="Type d'événement")),
                ('start_datetime', models.DateTimeField(verbose_name='Date et heure de début')),
                ('end_datetime', models.DateTimeField(verbose_name='Date et heure de fin')),
                ('all_day', models.BooleanField(default=False, verbose_name='Toute la journée')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Lieu')),
                ('room', models.CharField(blank=True, max_length=100, verbose_name='Salle')),
                ('priority', models.CharField(choices=[('low', 'Faible'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='medium', max_length=10, verbose_name='Priorité')),
                ('status', models.CharField(choices=[('scheduled', 'Planifié'), ('confirmed', 'Confirmé'), ('in_progress', 'En cours'), ('completed', 'Terminé'), ('cancelled', 'Annulé'), ('postponed', 'Reporté')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('recurrence_type', models.CharField(choices=[('none', 'Aucune'), ('daily', 'Quotidienne'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuelle'), ('yearly', 'Annuelle')], default='none', max_length=10, verbose_name='Type de récurrence')),
                ('recurrence_end_date', models.DateField(blank=True, null=True, verbose_name='Fin de récurrence')),
                ('reminder_minutes', models.PositiveIntegerField(blank=True, help_text="Nombre de minutes avant l'événement pour envoyer un rappel", null=True, verbose_name='Rappel (minutes avant)')),
                ('reminder_sent', models.BooleanField(default=False, verbose_name='Rappel envoyé')),
                ('required_materials', models.TextField(blank=True, verbose_name='Matériel nécessaire')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Coût estimé')),
                ('preparation_notes', models.TextField(blank=True, verbose_name='Notes de préparation')),
                ('completion_notes', models.TextField(blank=True, verbose_name='Notes de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('children', models.ManyToManyField(blank=True, related_name='events', to='children.child', verbose_name='Enfants participants')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('organizer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='Organisateur')),
                ('parent_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_events', to='planning.event', verbose_name='Événement parent')),
                ('staff_members', models.ManyToManyField(blank=True, related_name='assigned_events', to=settings.AUTH_USER_MODEL, verbose_name='Personnel assigné')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['start_datetime'],
                'permissions': [('can_manage_all_events', 'Peut gérer tous les événements'), ('can_view_all_events', 'Peut voir tous les événements')],
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_datetime', models.DateTimeField(verbose_name='Début')),
                ('end_datetime', models.DateTimeField(verbose_name='Fin')),
                ('availability_type', models.CharField(choices=[('available', 'Disponible'), ('busy', 'Occupé'), ('vacation', 'Congés'), ('sick_leave', 'Arrêt maladie'), ('training', 'Formation'), ('meeting', 'Réunion')], max_length=20, verbose_name='Type')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Récurrent')),
                ('recurrence_pattern', models.CharField(blank=True, max_length=100, verbose_name='Motif de récurrence')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Disponibilité',
                'verbose_name_plural': 'Disponibilités',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='shift',
            unique_together={('date', 'shift_type')},
        ),
    ]
