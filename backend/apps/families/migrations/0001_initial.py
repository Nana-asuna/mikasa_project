# Generated by Django 4.2.7 on 2025-07-02 20:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('children', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('family_name', models.CharField(max_length=200, verbose_name='Nom de famille')),
                ('family_type', models.CharField(choices=[('foster', "Famille d'accueil"), ('adoptive', 'Famille adoptive'), ('both', 'Les deux')], max_length=20, verbose_name='Type de famille')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvée'), ('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspendue'), ('rejected', 'Rejetée')], default='pending', max_length=20, verbose_name='Statut')),
                ('primary_contact_first_name', models.CharField(max_length=100, verbose_name='Prénom contact principal')),
                ('primary_contact_last_name', models.CharField(max_length=100, verbose_name='Nom contact principal')),
                ('primary_contact_email', models.EmailField(max_length=254, verbose_name='Email contact principal')),
                ('primary_contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. Jusqu'à 15 chiffres autorisés.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone principal')),
                ('secondary_contact_first_name', models.CharField(blank=True, max_length=100, verbose_name='Prénom contact secondaire')),
                ('secondary_contact_last_name', models.CharField(blank=True, max_length=100, verbose_name='Nom contact secondaire')),
                ('secondary_contact_email', models.EmailField(blank=True, max_length=254, verbose_name='Email contact secondaire')),
                ('secondary_contact_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Le numéro de téléphone doit être au format: '+999999999'. Jusqu'à 15 chiffres autorisés.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Téléphone secondaire')),
                ('address_line1', models.CharField(max_length=200, verbose_name='Adresse ligne 1')),
                ('address_line2', models.CharField(blank=True, max_length=200, verbose_name='Adresse ligne 2')),
                ('city', models.CharField(max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('marital_status', models.CharField(choices=[('single', 'Célibataire'), ('married', 'Marié(e)'), ('divorced', 'Divorcé(e)'), ('widowed', 'Veuf/Veuve'), ('partnership', 'Union libre')], max_length=20, verbose_name='Statut matrimonial')),
                ('number_of_children', models.PositiveIntegerField(default=0, verbose_name="Nombre d'enfants")),
                ('household_size', models.PositiveIntegerField(default=2, verbose_name='Taille du foyer')),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Revenus annuels')),
                ('employment_status_primary', models.CharField(blank=True, max_length=200, verbose_name='Statut emploi principal')),
                ('employment_status_secondary', models.CharField(blank=True, max_length=200, verbose_name='Statut emploi secondaire')),
                ('preferred_age_min', models.PositiveIntegerField(blank=True, null=True, verbose_name='Âge minimum préféré')),
                ('preferred_age_max', models.PositiveIntegerField(blank=True, null=True, verbose_name='Âge maximum préféré')),
                ('preferred_gender', models.CharField(choices=[('M', 'Garçon'), ('F', 'Fille'), ('both', 'Les deux')], default='both', max_length=10, verbose_name='Genre préféré')),
                ('max_children_capacity', models.PositiveIntegerField(default=1, verbose_name="Capacité maximale d'enfants")),
                ('special_needs_acceptance', models.BooleanField(default=False, verbose_name='Accepte les besoins spéciaux')),
                ('languages_spoken', models.CharField(default='Français', max_length=200, verbose_name='Langues parlées')),
                ('previous_foster_experience', models.BooleanField(default=False, verbose_name="Expérience d'accueil précédente")),
                ('previous_adoption_experience', models.BooleanField(default=False, verbose_name="Expérience d'adoption précédente")),
                ('experience_description', models.TextField(blank=True, verbose_name="Description de l'expérience")),
                ('motivation', models.TextField(blank=True, verbose_name='Motivation')),
                ('expectations', models.TextField(blank=True, verbose_name='Attentes')),
                ('background_check_completed', models.BooleanField(default=False, verbose_name='Vérification antécédents terminée')),
                ('background_check_date', models.DateField(blank=True, null=True, verbose_name='Date vérification antécédents')),
                ('home_study_completed', models.BooleanField(default=False, verbose_name='Étude du domicile terminée')),
                ('home_study_date', models.DateField(blank=True, null=True, verbose_name='Date étude du domicile')),
                ('references_checked', models.BooleanField(default=False, verbose_name='Références vérifiées')),
                ('application_date', models.DateField(verbose_name='Date de candidature')),
                ('approval_date', models.DateField(blank=True, null=True, verbose_name="Date d'approbation")),
                ('last_review_date', models.DateField(blank=True, null=True, verbose_name='Dernière révision')),
                ('next_review_date', models.DateField(blank=True, null=True, verbose_name='Prochaine révision')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('internal_notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('case_worker', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['assistant_social', 'admin']}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_families', to=settings.AUTH_USER_MODEL, verbose_name='Assistant social responsable')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_families', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Famille',
                'verbose_name_plural': 'Familles',
                'ordering': ['family_name'],
                'permissions': [('can_approve_families', 'Peut approuver les familles'), ('can_view_financial_info', 'Peut voir les informations financières')],
            },
        ),
        migrations.CreateModel(
            name='FamilyVisit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('visit_type', models.CharField(choices=[('initial_assessment', 'Évaluation initiale'), ('home_study', 'Étude du domicile'), ('follow_up', 'Suivi'), ('annual_review', 'Révision annuelle'), ('emergency', 'Urgence'), ('support', 'Soutien')], max_length=20, verbose_name='Type de visite')),
                ('scheduled_date', models.DateTimeField(verbose_name='Date prévue')),
                ('actual_date', models.DateTimeField(blank=True, null=True, verbose_name='Date réelle')),
                ('duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Durée (minutes)')),
                ('status', models.CharField(choices=[('scheduled', 'Planifiée'), ('completed', 'Terminée'), ('cancelled', 'Annulée'), ('rescheduled', 'Reportée')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('visit_objectives', models.TextField(blank=True, verbose_name='Objectifs de la visite')),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('recommendations', models.TextField(blank=True, verbose_name='Recommandations')),
                ('concerns', models.TextField(blank=True, verbose_name='Préoccupations')),
                ('overall_assessment', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Bon'), ('satisfactory', 'Satisfaisant'), ('needs_improvement', 'À améliorer'), ('concerning', 'Préoccupant')], max_length=20, verbose_name='Évaluation globale')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Suivi requis')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='Date de suivi')),
                ('follow_up_notes', models.TextField(blank=True, verbose_name='Notes de suivi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to='families.family')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_visits', to=settings.AUTH_USER_MODEL, verbose_name='Visiteur')),
            ],
            options={
                'verbose_name': 'Visite de famille',
                'verbose_name_plural': 'Visites de familles',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='FamilyMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=100, verbose_name='Nom')),
                ('date_of_birth', models.DateField(verbose_name='Date de naissance')),
                ('relationship', models.CharField(choices=[('parent', 'Parent'), ('child', 'Enfant'), ('grandparent', 'Grand-parent'), ('sibling', 'Frère/Sœur'), ('other_relative', 'Autre parent'), ('non_relative', 'Non-parent')], max_length=20, verbose_name='Relation')),
                ('occupation', models.CharField(blank=True, max_length=200, verbose_name='Profession')),
                ('education_level', models.CharField(blank=True, max_length=200, verbose_name="Niveau d'éducation")),
                ('health_conditions', models.TextField(blank=True, verbose_name='Conditions de santé')),
                ('background_check_completed', models.BooleanField(default=False, verbose_name='Vérification antécédents')),
                ('background_check_date', models.DateField(blank=True, null=True, verbose_name='Date vérification')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='families.family')),
            ],
            options={
                'verbose_name': 'Membre de famille',
                'verbose_name_plural': 'Membres de famille',
                'ordering': ['relationship', 'date_of_birth'],
            },
        ),
        migrations.CreateModel(
            name='Placement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('placement_type', models.CharField(choices=[('foster_care', 'Placement familial'), ('adoption', 'Adoption'), ('respite_care', 'Accueil temporaire'), ('emergency_care', "Accueil d'urgence")], max_length=20, verbose_name='Type de placement')),
                ('status', models.CharField(choices=[('planned', 'Planifié'), ('active', 'Actif'), ('completed', 'Terminé'), ('disrupted', 'Interrompu'), ('cancelled', 'Annulé')], default='planned', max_length=20, verbose_name='Statut')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('planned_end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin prévue')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin réelle')),
                ('placement_reason', models.TextField(verbose_name='Raison du placement')),
                ('special_conditions', models.TextField(blank=True, verbose_name='Conditions spéciales')),
                ('financial_support', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Aide financière')),
                ('success_rating', models.PositiveIntegerField(blank=True, help_text='Note sur 5', null=True, verbose_name='Évaluation de réussite')),
                ('completion_notes', models.TextField(blank=True, verbose_name='Notes de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('case_worker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_placements', to=settings.AUTH_USER_MODEL, verbose_name='Assistant social')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='children.child')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_placements', to=settings.AUTH_USER_MODEL)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='placements', to='families.family')),
            ],
            options={
                'verbose_name': 'Placement',
                'verbose_name_plural': 'Placements',
                'ordering': ['-start_date'],
                'unique_together': {('child', 'family', 'start_date')},
            },
        ),
    ]
