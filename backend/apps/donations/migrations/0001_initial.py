# Generated by Django 4.2.7 on 2025-07-02 20:52

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('children', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom')),
                ('donor_type', models.CharField(choices=[('individual', 'Particulier'), ('company', 'Entreprise'), ('foundation', 'Fondation'), ('government', 'Gouvernement'), ('ngo', 'ONG')], default='individual', max_length=20, verbose_name='Type de donateur')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone')),
                ('address_line1', models.CharField(blank=True, max_length=200, verbose_name='Adresse ligne 1')),
                ('address_line2', models.CharField(blank=True, max_length=200, verbose_name='Adresse ligne 2')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ville')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Code postal')),
                ('country', models.CharField(default='France', max_length=100, verbose_name='Pays')),
                ('company_registration', models.CharField(blank=True, max_length=50, verbose_name="Numéro d'enregistrement")),
                ('tax_id', models.CharField(blank=True, max_length=50, verbose_name='Numéro fiscal')),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Téléphone'), ('mail', 'Courrier')], default='email', max_length=20, verbose_name='Méthode de contact préférée')),
                ('newsletter_subscription', models.BooleanField(default=True, verbose_name='Abonnement newsletter')),
                ('anonymous_donations', models.BooleanField(default=False, verbose_name='Dons anonymes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='donor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donateur',
                'verbose_name_plural': 'Donateurs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecurringDonation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant')),
                ('frequency', models.CharField(choices=[('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], max_length=20, verbose_name='Fréquence')),
                ('start_date', models.DateField(verbose_name='Date de début')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('next_payment_date', models.DateField(verbose_name='Prochaine date de paiement')),
                ('status', models.CharField(choices=[('active', 'Actif'), ('paused', 'En pause'), ('cancelled', 'Annulé'), ('completed', 'Terminé')], default='active', max_length=20, verbose_name='Statut')),
                ('payment_method', models.CharField(choices=[('cash', 'Espèces'), ('check', 'Chèque'), ('bank_transfer', 'Virement bancaire'), ('credit_card', 'Carte de crédit'), ('paypal', 'PayPal'), ('other', 'Autre')], max_length=20, verbose_name='Méthode de paiement')),
                ('payment_reference', models.CharField(blank=True, max_length=200, verbose_name='Référence de paiement')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_donations', to='donations.donor')),
            ],
            options={
                'verbose_name': 'Don récurrent',
                'verbose_name_plural': 'Dons récurrents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DonationCampaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nom de la campagne')),
                ('description', models.TextField(verbose_name='Description')),
                ('campaign_type', models.CharField(choices=[('general', 'Général'), ('emergency', 'Urgence'), ('education', 'Éducation'), ('medical', 'Médical'), ('infrastructure', 'Infrastructure'), ('seasonal', 'Saisonnier')], max_length=20, verbose_name='Type de campagne')),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Objectif financier')),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Montant actuel')),
                ('start_date', models.DateTimeField(verbose_name='Date de début')),
                ('end_date', models.DateTimeField(verbose_name='Date de fin')),
                ('status', models.CharField(choices=[('draft', 'Brouillon'), ('active', 'Active'), ('paused', 'En pause'), ('completed', 'Terminée'), ('cancelled', 'Annulée')], default='draft', max_length=20, verbose_name='Statut')),
                ('image', models.ImageField(blank=True, null=True, upload_to='campaigns/', verbose_name='Image')),
                ('video_url', models.URLField(blank=True, verbose_name='URL vidéo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Campagne de dons',
                'verbose_name_plural': 'Campagnes de dons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('donation_type', models.CharField(choices=[('money', 'Argent'), ('food', 'Nourriture'), ('clothing', 'Vêtements'), ('medicine', 'Médicaments'), ('toys', 'Jouets'), ('books', 'Livres'), ('furniture', 'Mobilier'), ('electronics', 'Électronique'), ('other', 'Autre')], max_length=20, verbose_name='Type de don')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant/Valeur estimée')),
                ('currency', models.CharField(default='EUR', max_length=3, verbose_name='Devise')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantité')),
                ('unit', models.CharField(blank=True, max_length=50, verbose_name='Unité')),
                ('donation_date', models.DateTimeField(verbose_name='Date du don')),
                ('received_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de réception')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmé'), ('received', 'Reçu'), ('distributed', 'Distribué'), ('cancelled', 'Annulé')], default='pending', max_length=20, verbose_name='Statut')),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Espèces'), ('check', 'Chèque'), ('bank_transfer', 'Virement bancaire'), ('credit_card', 'Carte de crédit'), ('paypal', 'PayPal'), ('other', 'Autre')], max_length=20, verbose_name='Méthode de paiement')),
                ('reference_number', models.CharField(blank=True, max_length=100, verbose_name='Numéro de référence')),
                ('tax_receipt_requested', models.BooleanField(default=False, verbose_name='Reçu fiscal demandé')),
                ('tax_receipt_sent', models.BooleanField(default=False, verbose_name='Reçu fiscal envoyé')),
                ('tax_receipt_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'envoi du reçu")),
                ('designated_for', models.CharField(blank=True, max_length=200, verbose_name='Destiné à')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('internal_notes', models.TextField(blank=True, verbose_name='Notes internes')),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='children.child', verbose_name='Enfant bénéficiaire')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_donations', to=settings.AUTH_USER_MODEL, verbose_name='Enregistré par')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='donations.donor')),
            ],
            options={
                'verbose_name': 'Don',
                'verbose_name_plural': 'Dons',
                'ordering': ['-donation_date'],
                'permissions': [('can_approve_donations', 'Peut approuver les dons'), ('can_generate_tax_receipts', 'Peut générer les reçus fiscaux')],
            },
        ),
    ]
